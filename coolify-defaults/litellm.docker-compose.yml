services:
  litellm:
    image: 'ghcr.io/berriai/litellm-database:main-stable'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SERVICE_FQDN_LITELLM_4000
      - 'LITELLM_LOG=${LITELLM_LOG:-ERROR}'
      - 'LITELLM_MODE=${LITELLM_MODE:-PRODUCTION}'
      - 'LITELLM_MASTER_KEY=${SERVICE_PASSWORD_MASTERKEY}'
      - 'UI_USERNAME=${SERVICE_USER_UI}'
      - 'UI_PASSWORD=${SERVICE_PASSWORD_UI}'
      - 'DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-litellm}'
      - 'REDIS_HOST=${REDIS_HOST:-redis}'
      - 'REDIS_PORT=${REDIS_PORT:-6379}'
      - 'POSTGRES_USER=${SERVICE_USER_POSTGRES}'
      - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'POSTGRES_DB=${POSTGRES_DB:-litellm}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
      - 'OPENAI_API_BASE=${OPENAI_API_BASE}'
      - 'ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}'
      - 'ANTHROPIC_API_BASE=${ANTHROPIC_API_BASE}'
      - 'VOYAGE_API_KEY=${VOYAGE_API_KEY}'
      - 'VOYAGE_API_BASE=${VOYAGE_API_BASE}'
    volumes:
      - type: bind
        source: ./litellm-config.yaml
        target: /app/config.yaml
        content: "general_settings:\n  proxy_batch_write_at: 60\n\nrouter_settings:\n  redis_host: os.environ/REDIS_HOST\n  redis_port: os.environ/REDIS_PORT\n  redis_password: os.environ/REDIS_PASSWORD\n  enable_pre_call_check: true\n\nlitellm_settings:\n  set_verbose: false\n  json_logs: true\n  log_raw_request_response: true\n  # turn_off_message_logging: false\n  # redact_user_api_key_info: false\n  service_callback: [\"prometheus_system\"]\n  drop_params: true\n  # max_budget: 100\n  # budget_duration: 30d\n  num_retries: 3\n  request_timeout: 600\n  telemetry: false\n  cache: true\n  cache_params:\n    type: redis\n    host: os.environ/REDIS_HOST\n    port: os.environ/REDIS_PORT\n    password: os.environ/REDIS_PASSWORD\n    namespace: \"litellm_cache\"\n    ttl: 600\n  success_callback:\n    # - \"langfuse\"\n    - \"prometheus\"\n  failure_callback:\n    # - \"langfuse\"\n    - \"prometheus\"\nmodel_list:\n  # OpenAI\n  - model_name: gpt-4\n    litellm_params:\n      model: openai/gpt-4\n      api_key: os.environ/OPENAI_API_KEY\n      api_base: os.environ/OPENAI_API_BASE\n  - model_name: gpt-4o\n    litellm_params:\n      model: openai/gpt-4o\n      api_key: os.environ/OPENAI_API_KEY\n      api_base: os.environ/OPENAI_API_BASE\n  - model_name: gpt-4o-mini\n    litellm_params:\n      model: openai/gpt-4o-mini\n      api_key: os.environ/OPENAI_API_KEY\n      api_base: os.environ/OPENAI_API_BASE\n  # Anthropic\n  - model_name: claude-3-haiku\n    litellm_params:\n      model: claude-3-haiku-20240307\n      api_key: \"os.environ/ANTHROPIC_API_KEY\"\n      api_base: \"os.environ/ANTHROPIC_API_BASE\"\n  - model_name: claude-3.5-sonnet\n    litellm_params:\n      model: claude-3-5-sonnet-20240620\n      api_key: \"os.environ/ANTHROPIC_API_KEY\"\n      api_base: \"os.environ/ANTHROPIC_API_BASE\"\n  # VoyageAI\n  - model_name: voyage-law-2\n    model_info:\n      output_vector_size: 1024\n    litellm_params:\n      model: voyage/voyage-law-2\n      api_key: \"os.environ/VOYAGE_API_KEY\"\n      api_base: \"os.environ/VOYAGE_API_BASE\"\n      # rpm: 300\n      # tpm: 1000000\n  - model_name: voyage-multilingual-2\n    model_info:\n      mode: embedding\n      max_tokens: 32000\n      max_input_tokens: 32000\n      output_vector_size: 1024\n    litellm_params:\n      model: voyage/voyage-multilingual-2\n      api_key: \"os.environ/VOYAGE_API_KEY\"\n      api_base: \"os.environ/VOYAGE_API_BASE\"\n      input_cost_per_token: 0.00000012\n      output_cost_per_token: 0\n      # rpm: 300\n      # tpm: 1000000"
    healthcheck:
      test:
        - CMD
        - python
        - '-c'
        - "import requests as r;r.get('http://127.0.0.1:4000/health/liveliness').raise_for_status()"
      interval: 5s
      timeout: 5s
      retries: 3
    command:
      - '--config'
      - /app/config.yaml
      - '--port'
      - '4000'
      - '--num_workers'
      - '8'
  postgres:
    image: 'postgres:16-alpine'
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB:-litellm}'
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
    volumes:
      - 'pg-data:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -h localhost -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
      interval: 5s
      timeout: 5s
      retries: 3
  redis:
    image: 'redis:7-alpine'
    command: 'redis-server --appendonly yes'
    volumes:
      - 'redis-data:/data'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 5s
      timeout: 5s
      retries: 3
